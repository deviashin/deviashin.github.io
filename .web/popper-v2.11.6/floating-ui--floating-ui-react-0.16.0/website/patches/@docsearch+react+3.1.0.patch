diff --git a/node_modules/@docsearch/react/dist/esm/DocSearchButton.js b/node_modules/@docsearch/react/dist/esm/DocSearchButton.js
index 96f126a..a57acb2 100644
--- a/node_modules/@docsearch/react/dist/esm/DocSearchButton.js
+++ b/node_modules/@docsearch/react/dist/esm/DocSearchButton.js
@@ -6,7 +6,7 @@ function _objectWithoutProperties(source, excluded) { if (source == null) return
 
 function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
 
-import React, { useMemo } from 'react';
+import React, { useMemo, useState, useEffect } from 'react';
 import { ControlKeyIcon } from './icons/ControlKeyIcon';
 import { SearchIcon } from './icons/SearchIcon';
 var ACTION_KEY_DEFAULT = 'Ctrl';
@@ -25,13 +25,14 @@ export var DocSearchButton = React.forwardRef(function (_ref, ref) {
       buttonText = _translations$buttonT === void 0 ? 'Search' : _translations$buttonT,
       _translations$buttonA = translations.buttonAriaLabel,
       buttonAriaLabel = _translations$buttonA === void 0 ? 'Search' : _translations$buttonA;
-  var key = useMemo(function () {
-    if (typeof navigator !== 'undefined') {
-      return isAppleDevice() ? ACTION_KEY_APPLE : ACTION_KEY_DEFAULT;
-    }
+  var [key, setKey] = useState(null);
+
+  useEffect(
+    () =>
+      isAppleDevice() ? setKey(ACTION_KEY_APPLE) : setKey(ACTION_KEY_DEFAULT),
+    []
+  );
   
-    return null;
-  }, []);
   return /*#__PURE__*/React.createElement("button", _extends({
     type: "button",
     className: "DocSearch DocSearch-Button",
