; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

;--------------------------------------------------------------------------------------------------------------------------------
;----PLATFORMIO------------------------------------------------------------------------------------------------------------------
;--------------------------------------------------------------------------------------------------------------------------------
[platformio]
; Выбрать окружение:
;default_envs = ESP8266 ; Устарело, не использовать в новых проектах!
default_envs = ESP32

;--------------------------------------------------------------------------------------------------------------------------------
;----ENV-------------------------------------------------------------------------------------------------------------------------
;--------------------------------------------------------------------------------------------------------------------------------
[env]
; Порт, номер или имя устройства или допустимые обработчики URL:
;monitor_port = /dev/ttyUSB1 			; Unix.
;monitor_port = COM[5] 					; Windows.
;monitor_port = socket://localhost:4444 ; Socket.

; Скорость обмена порта отладки:
monitor_speed = 115200

; Порт загрузки прошивки:
;upload_port = COM1

; Скорость загрузки прошивки:
;upload_speed = 921600

; Фильтры к потокам ввода и вывода порта отладки устройства:
monitor_filters =
	;default 				; Удалить типичные коды управления терминалом из ввода.
	;colorize 				; Применение разных цветов для полученного и эхо (конфликтует с ANSI ESC кодами).
	;debug 					; Распечатывать отправленное и полученное.
	;direct 				; Ничего не делать: пересылать все данные без изменений.
	;hexlify 				; Показать шестнадцатеричное представление данных (кодовая точка каждого символа).
	;log2file 				; Записывать данные в файл «platformio-device-monitor-%date%.log», расположенный в текущем рабочем каталоге.
	;nocontrol 				; Удалить все контрольные коды, в т.ч. CR+LF.
	;printable 				; Показать десятичный код для всех символов, отличных от ASCII, и заменить большинство управляющих кодов.
	time					; Добавить временную метку с миллисекундами для каждой новой строки.
	;send_on_enter 			; Отправить текст на устройство на ENTER.
	esp32_exception_decoder ; Фильтр для Espressif 32, который декодирует причину сбоя программы (https://github.com/me-no-dev/EspExceptionDecoder).

; Таблица разделов памяти:
;board_build.partitions = partitions_custom.csv ; https://github.com/espressif/esp-idf/tree/master/components/partition_table

; Файловая система во внутренней памяти МК:
;board_build.filesystem = littlefs ; Варианты: spiffs (по умолчанию), littlefs, fatfs.

; Список дополнительных каталогов/хранилищ, где LDF будет искать зависимости:
lib_extra_dirs = ../deviashin-external-shared-libraries

; Режим поиска зависимостей (LDF):
lib_ldf_mode = chain+ ; Анализирует ВСЕ исходные файлы C/C++ проекта и следует только вложенным включениям из библиотек и оценивает условный синтаксис препроцессора C/C++.

; Проверка совместимости с фреймворками и платформами разработки:
;lib_compat_mode =  ; Варианты: "off", "soft", "strict".

; Зависимости проекта, которые должны быть автоматически установлены в "libdeps_dir" перед обработкой среды:
lib_deps =
	; Системные твики и улучшения:
	;khoih-prog/ESP_DoubleResetDetector@^1.3.2 ; https://github.com/khoih-prog/ESP_DoubleResetDetector

	; Асинхронные библиотеки для работы с TCP/UDP:
	;me-no-dev/AsyncTCP@1.1.1 		   ; https://github.com/me-no-dev/AsyncTCP
	;marvinroger/AsyncMqttClient@^0.9.0 ; https://github.com/marvinroger/async-mqtt-client
	
	; Форматирование и хранение данных:
	;bblanchon/ArduinoJson@^6.19.4 ; https://github.com/bblanchon/ArduinoJson
	
	; Боты и другие внешние/сторонние роботы:
	;gyverlibs/FastBot@^2.25 ; https://github.com/GyverLibs/FastBot
	
	; Программные протоколы обмена данными:
	;4-20ma/ModbusMaster@^2.0.1 ; https://github.com/4-20ma/ModbusMaster
	
	; Работа с периферией:
	;adafruit/Adafruit BusIO@^1.12.0 ; https://github.com/adafruit/Adafruit_BusIO
		; Дисплеи и индикаторы:
		;adafruit/Adafruit GFX Library@^1.11.3                ; https://github.com/adafruit/Adafruit-GFX-Library
		;adafruit/Adafruit ST7735 and ST7789 Library@^1.9.3   ; https://github.com/adafruit/Adafruit-ST7735-Library
		;adafruit/Adafruit SSD1306@^2.5.7					 ; https://github.com/adafruit/Adafruit_SSD1306

; Настройки для сборки проекта:
;build_flags =
	;-D DEBUG_ESP_PORT = Serial ; Установка последовательного порта отладки (по умолчанию = Serial).
	;-D NDEBUG					; Прокомментировать, чтобы включить отладку через Wi-Fi.
	;-DCORE_DEBUG_LEVEL = 1		; Варианты: 0 - ничего, 1 - ошибки, 2 - предупреждения, 3 - информация, 4 - отладка, 5 - подробности. 

;--------------------------------------------------------------------------------------------------------------------------------
;----ESP32-----------------------------------------------------------------------------------------------------------------------
;--------------------------------------------------------------------------------------------------------------------------------
[env:ESP32]
; Название и версия платформы разработки:
platform = espressif32@^5.0.0 ; Разрешить обратно-совместимые новые функции и исправления ошибок.
;platform = https://github.com/platformio/platform-espressif32.git ; .

; Название используемого фреймворка:
framework = espidf ;, arduino

; Предустановленный идентификатор отладочного модуля:
board = esp32dev

; :
;board_build.embed_txtfiles =
	;src/private.pem.key ; .
	;src/certificate.pem.crt ; .
	;src/aws-root-ca.pem ; .

; Частота тактирования MCU:
board_build.f_cpu = 240000000L ; Варианты: 160000000L или 240000000L.

; Частота работы флеш-памяти:
board_build.flash_freq = 80000000L ; Варианты: 40000000L (по умолчанию) или 80000000L.

; Режим интерфейса флеш-памяти:
;board_build.flash_mode = qio ; Варианты:  qio - , qout - , dio - , dout - .

; Максимальный размер программы:
;board_upload.maximum_size = 3145728 ; Варианты: 

; :
;board_upload.flash_size = 4MB ; Варианты: 

; :
;board_build.bootloader = dio ; Варианты: 

; :
;board_build.spiram_mode = 2 ; Варианты: 

;--------------------------------------------------------------------------------------------------------------------------------
;----ESP8266---------------------------------------------------------------------------------------------------------------------
;--------------------------------------------------------------------------------------------------------------------------------
[env:ESP8266]
; Название и версия платформы разработки:
platform = espressif8266 ; Разрешить обратно-совместимые новые функции и исправления ошибок.

; Предустановленный идентификатор отладочного модуля:
board = esp_wroom_02

; Название используемого фреймворка:
framework = arduino
